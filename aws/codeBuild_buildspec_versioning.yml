---
version: 0.2
# bookingtime GmbH
# 22.06.2022 19:48:37
# v1.2.0
# see: https://docs.aws.amazon.com/codebuild/latest/userguide/build-spec-ref.html

env:
  secrets-manager:
    DOCKERHUB_USERNAME: '/codeBuild/sourceCredential/dockerHub:username'
    DOCKERHUB_ACCESS_TOKEN: '/codeBuild/sourceCredential/dockerHub:token'
    GITHUB_USERNAME: '/codeBuild/sourceCredential/gitHub:username'
    GITHUB_ACCESS_TOKEN: '/codeBuild/sourceCredential/gitHub:token'

phases:
  pre_build:
    commands:
      - 'echo "preparing build on `date`" ; pwd ; ls -lah' # use 'printenv' to see environtment vars
      - 'echo "start versioning build for repo $REPO" ; pwd ; ls -lah'

      - 'echo "Login to docker hub..."'
      - 'echo $DOCKERHUB_ACCESS_TOKEN | docker login -u $DOCKERHUB_USERNAME --password-stdin'

      - 'echo "Login to GitHub docker repository..."'
      - 'echo $GITHUB_ACCESS_TOKEN | docker login ghcr.io -u $GITHUB_USERNAME --password-stdin'

      - 'echo "Composer authentication..."'
      - 'COMPOSER_AUTH="{\"github-oauth\":{\"github.com\":\"$GITHUB_ACCESS_TOKEN\"}}"'

      - 'echo "Login to Amazon ECR $IMAGE_ECR_URL with region $AWS_REGION"'
      - 'if [ ! -z "$IMAGE_ECR_URL" ] ; then aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $IMAGE_ECR_URL ; else echo "No IMAGE_ECR_URL found -> skip!" ; fi'
  build:
    commands:
      - 'echo "Build started on `date`" ; pwd ; ls -lah'

      - 'echo "create new release version number for repo $REPO..."'
      - 'touch ./aws/release_version'
      - 'docker run --rm --name semantic-release --env GH_TOKEN=$GITHUB_ACCESS_TOKEN --env REPO --mount type=bind,source=$(pwd)/aws/release_version,destination=/usr/src/app/release_version --mount type=bind,source=$(pwd)/.git,destination=/usr/src/app/.git ghcr.io/bookingtime/semantic-release:latest'
      - 'RELEASE_VERSION=$(cat ./aws/release_version) ; echo "$RELEASE_VERSION"'
      - 'if [ -z "$RELEASE_VERSION" ] ; then exit 1 ; fi' # abort build phase!
  post_build:
    commands:
      - 'echo "Build completed on `date`" ; pwd ; ls -lah'
      - 'if [ $CODEBUILD_BUILD_SUCCEEDING = 0 ] ; then exit 1 ; fi' # abort post_build phase!
artifacts:
  files: ['**/*']
